syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";

package event;

option go_package = "./;pb";

message Event {
    string id = 1;
    string title = 2;
    google.protobuf.Timestamp starts_at = 3;
    google.protobuf.Duration duration = 4;
    string description = 5;
    string owner_id = 6;
    google.protobuf.Duration notify_before = 7;
}

message CreateRequest {
    string title = 1 [(validate.rules).string.min_len = 10];
}

message CreateResponse {
    string id = 1;
}

message UpdateRequest {
    string id = 1 [(validate.rules).string.uuid = true];
    string title = 2 [(validate.rules).string.min_len = 10];
    google.protobuf.Timestamp starts_at = 3 [(validate.rules).timestamp.required = true];
    google.protobuf.Duration duration = 4 [(validate.rules).duration.required = true];
    string description = 5;
    google.protobuf.Duration notify_before = 6;
}

message UpdateResponse {
    UpdateRequest event = 1;
}

message DeleteRequest {
    string id = 1 [(validate.rules).string.uuid = true];
}

message ListRequest {
    google.protobuf.Timestamp date = 1 [(validate.rules).timestamp.required = true];
}

message ListResponse {
    repeated Event events = 1;
}

service CalendarService {
    rpc CreateEvent(CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/events"
            body: "*"
        };
    }
    rpc UpdateEvent(UpdateRequest) returns (UpdateResponse) {
        option (google.api.http) = {
            put: "/events/{id}"
            body: "*"
        };
    }
    rpc DeleteEvent(DeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/events/{id}"
        };
    }
    rpc ListDayEvents(ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            post: "/events/day"
            body: "*"
        };
    }
    rpc ListWeekEvents(ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            post: "/events/week"
            body: "*"
        };
    }
    rpc ListMonthEvents(ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            post: "/events/month"
            body: "*"
        };
    }
}
